#include <iostream>
#include <algorithm>
#include <vector>
 
using namespace std;
 
int n,c;
 
bool predicate(int mid,const vector<long> &array){
	int number=1;
	int left=0,right=0;
	while(left<array.size()){
		while(right<array.size()&&array[right]-array[left]<mid)
			right++;
		if(right<array.size()&&array[right]-array[left]>=mid){
			number++;
		}
		else if(right==array.size()&&array[right-1]-array[left]>=mid)
			number++;
		left=right;
	}
	if(number>=c){
		return true;
	}
	return false;
}
 
int main() {
	int t;
	cin>>t;
	while(t>0){
		cin>>n>>c;
		vector<long>array(n);
		for(int i=0;i<n;i++){
			cin>>array[i];
		}
		sort(array.begin(),array.end());
		int lo=1,ho=array[n-1];
		while(lo<ho){
			int mid=lo+(ho-lo+1)/2;
			if(predicate(mid,array)){
				lo=mid;
			}
			else{
				ho=mid-1;
			}
		}
		cout<<lo<<endl;
		t--;
	}
	return 0;
} 
