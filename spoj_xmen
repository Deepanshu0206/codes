//learnt new technique to solve LIS problem :)
#include <bits/stdc++.h>
using namespace std;
 
 
int ceil_func(const vector<int>& arr,int ele,int high){
    int low=-1;
    int mid;
    while(high-low>1){
        mid=low+(high-low)/2;
        (arr[mid]>=ele? high:low)=mid;
    }
    return high;
}
 
int main()
{
    int t;
    cin>>t;
    int n;
    while(t--){
        cin>>n;
        vector<int> arr(n);
        vector<int> index(n);
        for(int i=0;i<n;i++){
            cin>>arr[i];
            index[arr[i]]=i;
        }
        int ele;
        for(int i=0;i<n;i++){
            cin>>ele;
            arr[i]=index[ele];
        }
        int length=1;
        vector<int> tail;
        tail.push_back(arr[0]);
        for(int i=1;i<n;i++){
            if(arr[i]<tail[0]){
                tail[0]=arr[i];
            }
            else if(arr[i]>tail[length-1]){
                tail.push_back(arr[i]);
                length++;
            }
            else{
                tail[ceil_func(tail,arr[i],length-1)]=arr[i];
            }
        }
        cout<<length<<endl;
    }
    return 0;
}
